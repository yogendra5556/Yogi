---
import { Image } from 'astro:assets';
import Button from './Button.astro';
import Markdown from './Markdown.astro';
import { resolveImage } from '../content/pages/_resolveImage';

const { heading, body, image, button, layout, background } = Astro.props;

const resolvedImage = await resolveImage(image?.src);

const layoutClassMap = {
    imgLeft: 'md:flex-row-reverse',
    imgRight: 'md:flex-row'
};

const bgClassMap = {
    none: '',
    light: 'px-8 py-12 bg-white text-neutral-900 rounded md:px-12 md:py-16',
    primary: 'px-8 py-12 bg-primary text-neutral-900 rounded md:px-12 md:py-16'
};

const btnClassMap = {
    none: 'btn-primary',
    light: 'btn-primary',
    primary: 'btn-outline btn-accent'
};
---

<div class={bgClassMap[background] ?? bgClassMap['none']} data-sb-field-path={Astro.props['data-sb-field-path']}>
    <div class:list={['flex flex-col gap-12 md:items-center', layoutClassMap[layout] ?? layoutClassMap['imgRight']]}>
        <div class="flex-1 w-full max-w-xl mx-auto space-y-6">
            {
                heading && (
                    <h1 class="text-3xl font-bold sm:text-4xl" data-sb-field-path=".heading">
                        {heading}
                    </h1>
                )
            }
            {body && <Markdown content={body} class="sm:text-lg" data-sb-field-path=".body" />}
            {
                button && (
                    <Button
                        {...button}
                        class:list={['btn sm:btn-lg sm:btn-wide', btnClassMap[background] ?? btnClassMap['none']]}
                        data-sb-field-path=".button"
                    />
                )
            }
        </div>
        {
            resolvedImage && (
                <div class="w-full aspect-[4/3] flex-1 relative overflow-hidden rounded-lg">
                    <Image src={resolvedImage} alt={image?.alt || ''} width={640} class="w-full h-full object-cover" data-sb-field-path=".image" />
                </div>
            )
        }
    </div>
</div>
